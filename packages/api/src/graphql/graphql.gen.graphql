### This file was generated by Nexus Schema
### Do not make changes to this file directly

type ConvertPlaylistData {
  url: String!
}

type ConvertPlaylistPayload {
  data: ConvertPlaylistData
  error: PlaylistError
  success: Boolean!
}

type CreatePlaylistPayload {
  data: Playlist
  error: PlaylistError
  success: Boolean!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type FeaturedPlaylist {
  """
  Genre of the playlist
  """
  genre: PlaylistGenre!
  items: [Playlist!]!
}

type Mutation {
  convertPlaylist(
    platform: PlaylistPlatform!
    playlistExportId: String!
  ): ConvertPlaylistPayload!
  createPlaylist(
    author: String!
    platform: PlaylistPlatform!
    playlistGenre: PlaylistGenre!
    playlistLink: String!
  ): CreatePlaylistPayload!
}

type Playlist {
  """
  Api link to the playlist on the music streaming platform
  """
  apiLink: String!
  coverImage: String!
  createdAt: Date!
  duration: Int!

  """
  Unique Id used to export playlist
  """
  exportId: String!

  """
  Genre of the playlist
  """
  genre: PlaylistGenre!
  id: String!

  """
  Images for the playlist
  """
  images: [PlaylistImage!]!

  """
  Link used to import playlist
  """
  importLink: String!

  """
  Playlist Id used on the music streaming platform
  """
  importPlaylistId: String!

  """
  Name of the playlist
  """
  name: String!

  """
  Owner profile of the playlist
  """
  owner: PlaylistOwner!

  """
  The platform for this playlist
  """
  platform: PlaylistPlatform!

  """
  If the playlist is public or not
  """
  public: Boolean!

  """
  Songs associated with the playlist
  """
  songs: [PlaylistSong!]!
  totalNumberOfSongs: Int!
  updatedAt: Date!
}

type PlaylistError {
  """
  Message sent with the error
  """
  message: String!

  """
  Name of the error
  """
  name: String!
}

enum PlaylistGenre {
  Afro
  Blues
  Classical
  Country
  Dance
  HipPop
  Jazz
  KPop
  Others
  Rap
  Reggae
  Rock
}

type PlaylistImage {
  height: Int
  url: String!
  width: Int
}

type PlaylistOwner {
  name: String!
}

enum PlaylistPlatform {
  deezer
  spotify
  youtubeMusic
}

type PlaylistSong {
  """
  Artists who were involved in the song
  """
  artists: [PlaylistSongArtist!]!
  coverImage: String!
  duration: Int!

  """
  Images associated with the song
  """
  images: [PlaylistImage!]!

  """
  Name of the song
  """
  name: String!

  """
  URL to preview the song
  """
  previewURL: String
}

type PlaylistSongArtist {
  name: String!
}

type PlaylistSongLists {
  currentPage: Int!
  data: [PlaylistSong!]!
  pageSize: Int!
  total: Int!
}

type Playlists {
  currentPage: Int!
  data: [Playlist!]!
  pageSize: Int!
  total: Int!
}

type PlaylistsByGenre {
  """
  Genre of the playlist
  """
  genre: PlaylistGenre!
  items: [Playlist!]!
}

type Query {
  featuredPlaylists: [FeaturedPlaylist!]!
  playlistById(id: ID!): Playlist
  playlistSongs(
    currentPage: Int!
    pageSize: Int!
    playlistId: String!
  ): PlaylistSongLists!
  playlists(currentPage: Int!, genre: PlaylistGenre, pageSize: Int!): Playlists!
  playlistsByGenre(genre: PlaylistGenre!): PlaylistsByGenre!
}
